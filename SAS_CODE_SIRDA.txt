PROC IML;

*INPUT DATA t(X)X;

XXMA = { 1.000 0.800 0.140 0.060,
		0.800 1.000 0.060 0.140,
		0.140 0.060 1.000 0.800,
		0.060 0.140 0.800 1.000 }; 
		
*INPUT DATA t(X)Y;

XYMA = {-0.003 0.265 0.404 0.723,
0.062 0.203 0.709 0.461,
0.422 0.714 -0.142 -0.012,
0.710 0.440 0.089-0.037 };

*INPUT DATA t(Y) Y;
YYMA = { 1.000 0.400 0.200 0.000,
0.400 1.000 0.000 0.200,
0.200 0.000 1.000 0.400,
0.000 0.200 0.400 1.000 };

*INITIAL VALUES OF ALPH, BETA, & CRT;
*THESE ARE 4*1 MATRICES!!!!!!!!!!!!!!!!!!;
ALPH = { 1.000, 1.000, 1.000, 1.000 };
BETA = { 1.000, 1.000, 1.000, 1.000 }; 
CRT = { 1.000 }; 

x = XYMA;

PRINT XXMA;
PRINT BETA;

*ITERATIVE MULTIPLE &; *SIMPLE REGRESSIONS;
START PLS; 
DO WHILE( CRT >.0000000001 );

	ETA = XYMA*BETA*INV(SQRT(BETA` *YYMA*BETA));
	AP = INV(XXMA)*ETA;
	AQ = AP*INV(SQRT(AP` *XXMA*AP));
	BT = XYMA` *AQ;
	CRT = SSQ(ALPH - AQ) + SSQ(BETA - BT);
	ALPH = AQ;
	BETA = BT;
	END;
	
FINISH; *ALPH = X-WEIGHTS;
RUN PLS; *BETA = Y-CROSSLOADINGS;
XLDG = XXMA*ALPH; *XLDG = X-LOADINGS;

YWGT = BETA*INV(SQRT(BETA` *YYMA*BETA)); *YWGT = Y-WEIGHTS;

YLDG = YYMA*YWGT; *YLDG = Y-LOADINGS;

PATH = ALPH` *XYMA*YWGT; *PATH = PATH COEFFICIENT;
REDN = (SUM(BETA##2))/4; *REDN = REDUNDANCY INDEX;
PRINT PATH REDN;
PRINT XLDG ALPH;
PRINT YLDG YWGT BETA;
PRINT ETA;
PRINT CRT;


